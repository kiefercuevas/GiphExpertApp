{"version":3,"sources":["components/GiphExpertApp/AddComponent.js","components/GiphExpertApp/GiphGridItem.js","Providers/GiphProvider.js","components/GiphExpertApp/GiphGrid.js","hooks/useFechGiphs.js","components/GiphExpertApp/GiphExpertApp.js","index.js"],"names":["AddComponent","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevCategories","includes","type","value","onChange","target","GiphGridItem","img","title","id","className","src","alt","getGiphs","category","a","limit","key","url","encodeURI","fetch","res","json","data","giphs","map","images","original","GiphGrid","isLoading","setGiphs","useEffect","then","imgs","useFechGiphs","style","height","giph","GiphExpertApp","categories","ReactDom","render","document","querySelector"],"mappings":"yLAGaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAkBjD,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAc,OAAIA,EAAeC,SAASR,GAAcO,EAAtC,CAAwDP,GAAxD,mBAAuEO,OACvGN,EAAc,MAMhB,SACE,uBACEQ,KAAK,OACLC,MAAOV,EACPW,SAnBa,SAACR,GAClBF,EAAcE,EAAES,OAAOF,a,QCNdG,EAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,MAAgB,EAATC,GACzC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKJ,EAAKK,IAAKJ,IACpB,qBAAKE,UAAU,YAAf,SACE,4BAAG,4BAAIF,Y,uBCNFK,EAAQ,uCAAG,WAAOC,GAAP,uCAAAC,EAAA,6DAAiBC,EAAjB,+BAAyB,GAAIC,EAA7B,+BAAmC,mCAEnDC,EAFgB,iDAEgCC,UAAUL,GAF1C,kBAE6DE,EAF7D,oBAE8EC,GAF9E,SAGJG,MAAMF,GAHF,cAGhBG,EAHgB,gBAICA,EAAIC,OAJL,uBAIdC,EAJc,EAIdA,KAEFC,EAAQD,EAAKE,KAAI,SAAAlB,GAAG,MAAK,CAC7BE,GAAIF,EAAIE,GACRF,IAAKA,EAAImB,OAAOC,SAAST,IACzBV,MAAOD,EAAIC,UATS,kBAYfgB,GAZe,4CAAH,sDCIRI,EAAW,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECFd,SAACA,GAAc,IAAD,EAEdtB,mBAAS,CACjC+B,KAAM,GACNM,WAAW,IAJ2B,mBAEjCL,EAFiC,KAE1BM,EAF0B,KAkBxC,OAXAC,qBAAU,WAERlB,EAASC,GAAUkB,MAAK,SAAAC,GACtBH,EAAS,CACPP,KAAMU,EACNJ,WAAW,SAId,CAACf,IAEGU,EDd4BU,CAAapB,GAAxCe,EAFgC,EAEhCA,UAAiBL,EAFe,EAErBD,KAEnB,OACE,sBAAKY,MAAO,CAAEC,OAAQ,QAAtB,UACE,6BAAKtB,IACL,sBAAKJ,UAAU,WAAf,UAEGmB,GAAa,cACbL,EAAMC,KAAI,SAAAY,GAAI,OAAI,cAAC,EAAD,eAAgCA,GAAbA,EAAK5B,UAG7C,2BEGS6B,EAjBO,WAAO,IAAD,EAEU9C,mBAAS,CAAC,SAFpB,mBAEnB+C,EAFmB,KAEPhD,EAFO,KAI1B,OACE,qCACE,+CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,8BACGgD,EAAWd,KAAI,SAAAX,GAAQ,OAAI,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,Y,MCPnD0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.4cb625d6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddComponent = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const changeText = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 0) {\r\n      setCategories(prevCategories => prevCategories.includes(inputValue) ? prevCategories : [inputValue, ...prevCategories]);\r\n      setInputValue(\"\");\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={changeText}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nAddComponent.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport const GiphGridItem = ({ img, title, id }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={img} alt={title} />\r\n      <div className=\"container\">\r\n        <p><b>{title}</b></p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","\r\nexport const getGiphs = async (category, limit = 10, key = \"u5wlRHaam3byXJYl1xZOMQiFhF9BsaHo\") => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${key}`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n\r\n  const giphs = data.map(img => ({\r\n    id: img.id,\r\n    img: img.images.original.url,\r\n    title: img.title\r\n  }));\r\n\r\n  return giphs;\r\n}","import React from 'react';\r\nimport { GiphGridItem } from './GiphGridItem';\r\nimport { useFechGiphs } from '../../hooks/useFechGiphs';\r\n\r\n\r\nexport const GiphGrid = ({ category }) => {\r\n\r\n  const { isLoading, data: giphs } = useFechGiphs(category);\r\n\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      <h2>{category}</h2>\r\n      <div className=\"flex-row\">\r\n\r\n        {isLoading && \"Cargando...\"}\r\n        {giphs.map(giph => <GiphGridItem key={giph.id} {...giph} />)}\r\n\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGiphs } from '../Providers/GiphProvider';\r\n\r\nexport const useFechGiphs = (category) => {\r\n\r\n  const [giphs, setGiphs] = useState({\r\n    data: [],\r\n    isLoading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    getGiphs(category).then(imgs => {\r\n      setGiphs({\r\n        data: imgs,\r\n        isLoading: false\r\n      })\r\n    });\r\n\r\n  }, [category]);\r\n\r\n  return giphs;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddComponent } from './AddComponent';\r\nimport { GiphGrid } from './GiphGrid';\r\n\r\nconst GiphExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Goku'])\r\n\r\n  return (\r\n    <>\r\n      <h2>GiphExpertApp</h2>\r\n      <AddComponent setCategories={setCategories} />\r\n      <hr />\r\n      <div>\r\n        {categories.map(category => <GiphGrid key={category} category={category} />)}\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default GiphExpertApp;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport GiphExpertApp from './components/GiphExpertApp/GiphExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDom.render(\r\n  <GiphExpertApp />,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}